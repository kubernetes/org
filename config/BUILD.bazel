load("@io_bazel_rules_go//go:def.bzl", "go_test")

genrule(
    name = "gen-config.yaml",
    srcs = glob(["**/*.yaml"]),
    outs = ["config.yaml"],
    cmd = """
parts=()
for val in $(SRCS); do
  if [[ "$$val" == *"/org.yaml" ]]; then
    key="$$(basename "$$(dirname "$$val")")"
    parts+=(--org-part=$$key=$$val)
  fi
done
./$(location //cmd/merge) --merge-teams $${parts[@]} > $(location config.yaml)""",
    tools = ["//cmd/merge"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["config_test.go"],
    data = glob([
        "*/org.yaml",
        "*/OWNERS",
    ]) + ["config.yaml"],
    deps = [
        "@com_github_ghodss_yaml//:go_default_library",
        "@io_k8s_apimachinery//pkg/util/sets:go_default_library",
        "@io_k8s_test_infra//prow/config/org:go_default_library",
        "@io_k8s_test_infra//prow/github:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
